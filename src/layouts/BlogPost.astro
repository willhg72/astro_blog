---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import Comments from '../components/Comments.astro';

// Update Props type to include optional hideComments property
type Props = CollectionEntry<'blog'>['data'] & {
  hideComments?: boolean;
};

// Destructure hideComments from props with default value of false
const { title, description, pubDate, updatedDate, heroImage, hideComments = false } = Astro.props;
const currentPath = Astro.url.pathname.split('/').filter(Boolean).pop();
const isHomePage = Astro.url.pathname === '/';
const isAboutPage = currentPath === 'about';

// Ensure dates are properly handled
const formattedPubDate = pubDate instanceof Date ? pubDate : (pubDate ? new Date(pubDate) : null);
const formattedUpdatedDate = updatedDate instanceof Date ? updatedDate : (updatedDate ? new Date(updatedDate) : null);
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} />
		<style>
			main {
				width: calc(100% - 2em);
				max-width: 100%;
				margin: 0;
			}
			.hero-image {
				width: 100%;
			}
			.hero-image img {
				display: block;
				margin: 0 auto;
				border-radius: 12px;
				box-shadow: var(--box-shadow);
			}
			.prose {
				width: 720px;
				max-width: calc(100% - 2em);
				margin: auto;
				padding: 1em;
				color: rgb(var(--gray-dark));
			}
			.title {
				margin-bottom: 1em;
				padding: 1em 0;
				text-align: center;
				line-height: 1;
			}
			.title h1 {
				margin: 0 0 0.5em 0;
			}
			.date {
				margin-bottom: 0.5em;
				color: rgb(var(--gray));
			}
			.last-updated-on {
				font-style: italic;
			}
		</style>
	</head>

	<body>
		<Header />
		<main>
			<article>
				<div class="hero-image">
					{heroImage && <img width={1020} height={510} src={heroImage} alt="" />}
				</div>
				<div class="prose">
					{!isHomePage && (
						<div class="title">
							<div class="date">
								{formattedPubDate && <FormattedDate date={formattedPubDate} />}
								{
									formattedUpdatedDate && (
										<div class="last-updated-on">
											Last updated on <FormattedDate date={formattedUpdatedDate} />
										</div>
									)
								}
							</div>
							<h1>{title}</h1>
							<hr />
						</div>
					)}
					<slot />
					
					{/* Make sure comments are displayed on blog posts */}
					{!isHomePage && currentPath !== 'about' && (
						<div class="comments-container">
							<Comments postId={currentPath || ''} />
						</div>
					)}
				</div>
			</article>
		</main>
		<Footer />
	</body>
</html>