---
import { getCollection } from 'astro:content';
import BlogPost from '../../layouts/BlogPost.astro';

// Make sure this page is prerendered
export const prerender = true;

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  
  return posts.map((post) => ({
    params: { slug: post.id },
    props: { 
      title: post.data.title,
      description: post.data.description,
      pubDate: post.data.pubDate,
      updatedDate: post.data.updatedDate,
      heroImage: post.data.heroImage,
      body: post.body
    },
  }));
}

const props = Astro.props;

// Simple function to convert markdown to HTML
function markdownToHtml(markdown) {
  // Basic conversion of markdown to HTML
  return markdown
    // Convert headers
    .replace(/## (.*)/g, '<h2>$1</h2>')
    // Convert bold text
    .replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>')
    // Convert list items
    .replace(/- (.*)/g, '<li>$1</li>')
    // Wrap lists
    .replace(/<li>(.*?)<\/li>(\s*<li>)/g, '<ul><li>$1</li>$2')
    .replace(/<li>(.*?)<\/li>(\s*(?!<li>))/g, '<li>$1</li></ul>$2')
    // Convert paragraphs
    .replace(/^(?!<[uo]l|<li|<h)(.+)$/gm, '<p>$1</p>');
}

const contentHtml = markdownToHtml(props.body);
---

<BlogPost {...props}>
  <article set:html={contentHtml} class="blog-content" />
</BlogPost>

<style>
  .blog-content {
    line-height: 1.6;
    max-width: 720px;
    margin: 0 auto;
  }
  
  .blog-content :global(h2) {
    margin-top: 2rem;
    margin-bottom: 1rem;
    font-size: 1.5rem;
    font-weight: 600;
  }
  
  .blog-content :global(p) {
    margin-bottom: 1.5rem;
  }
  
  .blog-content :global(ul) {
    margin-bottom: 1.5rem;
    padding-left: 1.5rem;
    list-style-type: disc;
  }
  
  .blog-content :global(li) {
    margin-bottom: 0.5rem;
  }
  
  .blog-content :global(strong) {
    font-weight: 600;
  }
</style>
