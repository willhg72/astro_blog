---
import { getCollection } from 'astro:content';
import BlogPost from '../../layouts/BlogPost.astro';

// Add this line to prerender the page
export const prerender = true;

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  
  return posts.map((post) => ({
    params: { slug: post.id },
    props: { post },
  }));
}

const { slug } = Astro.params;
const { post } = Astro.props;

// Import the remark-rehype plugin to convert markdown to HTML
import { remark } from 'remark';
import remarkHtml from 'remark-html';

// Process the markdown content
const processedContent = await remark()
  .use(remarkHtml)
  .process(post.body);
const contentHtml = processedContent.toString();
---

<BlogPost {...post.data}>
  <article set:html={contentHtml} class="blog-content" />
</BlogPost>

<style>
  .blog-content {
    line-height: 1.6;
    max-width: 720px;
    margin: 0 auto;
  }
  
  .blog-content :global(h2) {
    margin-top: 2rem;
    margin-bottom: 1rem;
    font-size: 1.5rem;
    font-weight: 600;
  }
  
  .blog-content :global(p) {
    margin-bottom: 1.5rem;
  }
  
  .blog-content :global(ul) {
    margin-bottom: 1.5rem;
    padding-left: 1.5rem;
    list-style-type: disc;
  }
  
  .blog-content :global(li) {
    margin-bottom: 0.5rem;
  }
  
  .blog-content :global(strong) {
    font-weight: 600;
  }
</style>
